<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
  <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root" xmlns="">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <data name="Assign changed successfully" xml:space="preserve">
    <value>할당이 성공적으로 변경되었습니다.</value>
  </data>
  <data name="Assigned Roles" xml:space="preserve">
    <value>할당된 역할</value>
  </data>
  <data name="Assigned successfully" xml:space="preserve">
    <value>성공적으로 할당됨</value>
  </data>
  <data name="Create a new role" xml:space="preserve">
    <value>새 역할 만들기</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>설명</value>
  </data>
  <data name="Edit the role" xml:space="preserve">
    <value>역할 편집</value>
  </data>
  <data name="Email / PhoneNumber" xml:space="preserve">
    <value>이메일/전화번호</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>역할</value>
  </data>
  <data name="Search by role name" xml:space="preserve">
    <value>역할 이름 검색</value>
  </data>
  <data name="Set Permissions" xml:space="preserve">
    <value>권한 설정</value>
  </data>
  <data name="Unassigned successfully" xml:space="preserve">
    <value>할당이 성공적으로 취소되었습니다.</value>
  </data>
  <data name="Assign or Unassign all" xml:space="preserve">
    <value>모두 할당 또는 할당 취소</value>
  </data>
  <data name="Audit Trails" xml:space="preserve">
    <value>감사 추적</value>
  </data>
  <data name="Audit Trails Permissions" xml:space="preserve">
    <value>감사 추적 권한</value>
  </data>
  <data name="Authorization has been changed" xml:space="preserve">
    <value>권한이 변경되었습니다.</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>카테고리</value>
  </data>
  <data name="Categories Permissions" xml:space="preserve">
    <value>카테고리 권한</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>고객</value>
  </data>
  <data name="Customers Permissions" xml:space="preserve">
    <value>고객 권한</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>계기반</value>
  </data>
  <data name="Dashboard Permissions" xml:space="preserve">
    <value>대시보드 권한</value>
  </data>
  <data name="Documents" xml:space="preserve">
    <value>서류</value>
  </data>
  <data name="Documents Permissions" xml:space="preserve">
    <value>문서 권한</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>직업</value>
  </data>
  <data name="Job Permissions" xml:space="preserve">
    <value>직업 허가</value>
  </data>
  <data name="Logs" xml:space="preserve">
    <value>로그</value>
  </data>
  <data name="Logs Permissions" xml:space="preserve">
    <value>로그 권한</value>
  </data>
  <data name="Multi-Tenant" xml:space="preserve">
    <value>다중 테넌트</value>
  </data>
  <data name="Multi-Tenant Permissions" xml:space="preserve">
    <value>다중 테넌트 권한</value>
  </data>
  <data name="Normalized Name" xml:space="preserve">
    <value>정규화된 이름</value>
  </data>
  <data name="Permission" xml:space="preserve">
    <value>허가</value>
  </data>
  <data name="Permission assigned successfully" xml:space="preserve">
    <value>권한이 할당되었습니다.</value>
  </data>
  <data name="Permission Description" xml:space="preserve">
    <value>권한 설명</value>
  </data>
  <data name="Permission removed successfully" xml:space="preserve">
    <value>권한이 삭제되었습니다.</value>
  </data>
  <data name="Picklist" xml:space="preserve">
    <value>선택 목록</value>
  </data>
  <data name="Picklist Permissions" xml:space="preserve">
    <value>선택 목록 권한</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>제품</value>
  </data>
  <data name="Products Permissions" xml:space="preserve">
    <value>제품 권한</value>
  </data>
  <data name="Role Claims" xml:space="preserve">
    <value>역할 청구</value>
  </data>
  <data name="Role Claims Permissions" xml:space="preserve">
    <value>역할 청구 권한</value>
  </data>
  <data name="Roles Permissions" xml:space="preserve">
    <value>역할 권한</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>선택된</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>사용자</value>
  </data>
  <data name="Users Permissions" xml:space="preserve">
    <value>사용자 권한</value>
  </data>
  <data name="Tenant Name" xml:space="preserve">
    <value>테넌트 이름</value>
  </data>
</root>